package com.vg.hbase.manager.ui;

/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */

import java.awt.Component;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

import org.apache.commons.lang.StringUtils;
import org.apache.hadoop.hbase.HColumnDescriptor;
import org.apache.hadoop.hbase.HTableDescriptor;
import org.apache.hadoop.hbase.client.HBaseAdmin;
import org.apache.hadoop.hbase.util.Bytes;

import com.vg.hbase.operations.base.HBaseConfigurationManager;
import com.vg.hbase.operations.base.HbaseManagerTableGetter;

/**
 * 
 * @author skrishnanunni
 */
public class HBaseManagerAdminPanel extends javax.swing.JDialog {
    
    /**
	 * 
	 */
    private static final long serialVersionUID = -1797775811490932987L;
    /**
     * Creates new form HBaseManagerAdminPanel
     */
    private static DefaultListModel listModel;
    private static HTableDescriptor tableDesc;
    
    Component cmplist[];
    private HbaseManagerTableGetter hbaseTableGetter = new HbaseManagerTableGetter();
    private HBaseAdmin hbaseAdmin = HBaseConfigurationManager.getHbaseAdmin();
    
    public HBaseManagerAdminPanel(java.awt.Frame parent, boolean modal) {
	super(parent, modal);
	initComponents();
	listModel = (DefaultListModel) listColFamilynames.getModel();
	cmplist = panelAlterTableControl.getComponents();
	
	disablePane(false);
	addTableList();
	
    }
    
    private void addTableList() {
	
	String[] tblList = hbaseTableGetter.getTableNames();
	for (String tblListItem : tblList) {
	    comboTableList.addItem(tblListItem);
	}
	
    }
    
    private void AddColoumnList(String tblname) {
	this.setTitle(tblname);
	String[] familyList = hbaseTableGetter.getColoumnFamiles(tblname);
	String[] familyVersions = hbaseTableGetter.getColoumnFamilyVersions(tblname);
	int i = 0;
	
	for (String tblListItem : familyList) {
	    listModel.addElement(tblListItem + ": " + familyVersions[i++]);
	}
	
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void initComponents() {
	
	jPanel1 = new javax.swing.JPanel();
	jLabel1 = new javax.swing.JLabel();
	jLabel2 = new javax.swing.JLabel();
	comboTableList = new javax.swing.JComboBox();
	jLabel3 = new javax.swing.JLabel();
	clickAlter = new javax.swing.JButton();
	clickDrop = new javax.swing.JButton();
	clickTruncate = new javax.swing.JButton();
	panelAlterTableControl = new javax.swing.JPanel();
	jLabel4 = new javax.swing.JLabel();
	labelTableName = new javax.swing.JLabel();
	jLabel5 = new javax.swing.JLabel();
	clickAddColFamily = new javax.swing.JButton();
	clickRemoveColFamily = new javax.swing.JButton();
	valueNewColFamilyName = new javax.swing.JTextField();
	jLabel6 = new javax.swing.JLabel();
	jScrollPane1 = new javax.swing.JScrollPane();
	listColFamilynames = new javax.swing.JList(new DefaultListModel());
	clickAlterTable = new javax.swing.JButton();
	
	setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
	setTitle("HBase Manager - Administrator Panel");
	
	jLabel1.setText("Admin Actions");
	
	jLabel2.setText("Tables");
	
	comboTableList.addActionListener(new java.awt.event.ActionListener() {
	    public void actionPerformed(java.awt.event.ActionEvent evt) {
		comboTableListActionPerformed(evt);
	    }
	});
	
	jLabel3.setText("Actions:");
	
	clickAlter.setText("Alter");
	clickAlter.addActionListener(new java.awt.event.ActionListener() {
	    public void actionPerformed(java.awt.event.ActionEvent evt) {
		clickAlterActionPerformed(evt);
	    }
	});
	
	clickDrop.setText("Drop");
	clickDrop.addActionListener(new java.awt.event.ActionListener() {
	    public void actionPerformed(java.awt.event.ActionEvent evt) {
		clickDropActionPerformed(evt);
	    }
	});
	
	clickTruncate.setText("Truncate");
	clickTruncate.addActionListener(new java.awt.event.ActionListener() {
	    public void actionPerformed(java.awt.event.ActionEvent evt) {
		clickTruncateActionPerformed(evt);
	    }
	});
	
	javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
	jPanel1.setLayout(jPanel1Layout);
	jPanel1Layout
		.setHorizontalGroup(jPanel1Layout
			.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
			.addGroup(
				jPanel1Layout
					.createSequentialGroup()
					.addGroup(
						jPanel1Layout
							.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
							.addGroup(
								jPanel1Layout.createSequentialGroup().addContainerGap()
									.addComponent(jLabel1))
							.addGroup(
								jPanel1Layout
									.createSequentialGroup()
									.addGap(33, 33, 33)
									.addComponent(jLabel2)
									.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
									.addComponent(comboTableList,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										138,
										javax.swing.GroupLayout.PREFERRED_SIZE)
									.addGap(38, 38, 38)
									.addComponent(jLabel3)
									.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									.addComponent(clickAlter)
									.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									.addComponent(clickDrop)
									.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									.addComponent(clickTruncate)))
					.addContainerGap(21, Short.MAX_VALUE)));
	jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		.addGroup(
			jPanel1Layout
				.createSequentialGroup()
				.addContainerGap()
				.addComponent(jLabel1)
				.addGap(22, 22, 22)
				.addGroup(
					jPanel1Layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(jLabel2)
						.addComponent(comboTableList, javax.swing.GroupLayout.PREFERRED_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel3)
						.addComponent(clickAlter).addComponent(clickDrop)
						.addComponent(clickTruncate)).addContainerGap(39, Short.MAX_VALUE)));
	
	panelAlterTableControl.setBorder(javax.swing.BorderFactory
		.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
	
	jLabel4.setText("Table :");
	
	labelTableName.setText("<TableName>");
	
	jLabel5.setText("New Coloumn Family:");
	
	clickAddColFamily.setText("Add Coloumn Family");
	clickAddColFamily.addActionListener(new java.awt.event.ActionListener() {
	    public void actionPerformed(java.awt.event.ActionEvent evt) {
		clickAddColFamilyActionPerformed(evt);
	    }
	});
	
	clickRemoveColFamily.setText("Remove Coloumn Family");
	clickRemoveColFamily.addActionListener(new java.awt.event.ActionListener() {
	    public void actionPerformed(java.awt.event.ActionEvent evt) {
		clickRemoveColFamilyActionPerformed(evt);
	    }
	});
	
	jLabel6.setText("Coloumn Families :");
	
	jScrollPane1.setViewportView(listColFamilynames);
	
	clickAlterTable.setText("Alter Table");
	clickAlterTable.addActionListener(new java.awt.event.ActionListener() {
	    public void actionPerformed(java.awt.event.ActionEvent evt) {
		clickAlterTableActionPerformed(evt);
	    }
	});
	
	javax.swing.GroupLayout panelAlterTableControlLayout = new javax.swing.GroupLayout(panelAlterTableControl);
	panelAlterTableControl.setLayout(panelAlterTableControlLayout);
	panelAlterTableControlLayout
		.setHorizontalGroup(panelAlterTableControlLayout
			.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
			.addGroup(
				panelAlterTableControlLayout
					.createSequentialGroup()
					.addContainerGap()
					.addGroup(
						panelAlterTableControlLayout
							.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
							.addGroup(
								panelAlterTableControlLayout
									.createSequentialGroup()
									.addComponent(jLabel4)
									.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									.addComponent(labelTableName))
							.addGroup(
								panelAlterTableControlLayout
									.createSequentialGroup()
									.addGroup(
										panelAlterTableControlLayout
											.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
											.addComponent(jLabel5)
											.addComponent(jLabel6))
									.addGap(23, 23, 23)
									.addGroup(
										panelAlterTableControlLayout
											.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
											.addComponent(
												valueNewColFamilyName,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												115,
												javax.swing.GroupLayout.PREFERRED_SIZE)
											.addGroup(
												panelAlterTableControlLayout
													.createParallelGroup(
														javax.swing.GroupLayout.Alignment.LEADING)
													.addComponent(
														clickAlterTable)
													.addComponent(
														jScrollPane1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														113,
														javax.swing.GroupLayout.PREFERRED_SIZE)))
									.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									.addGroup(
										panelAlterTableControlLayout
											.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
											.addComponent(clickAddColFamily)
											.addComponent(
												clickRemoveColFamily))))
					.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
	panelAlterTableControlLayout.setVerticalGroup(panelAlterTableControlLayout.createParallelGroup(
		javax.swing.GroupLayout.Alignment.LEADING).addGroup(
		panelAlterTableControlLayout
			.createSequentialGroup()
			.addGap(24, 24, 24)
			.addGroup(
				panelAlterTableControlLayout
					.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
					.addComponent(jLabel4).addComponent(labelTableName))
			.addGap(18, 18, 18)
			.addGroup(
				panelAlterTableControlLayout
					.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
					.addComponent(valueNewColFamilyName, javax.swing.GroupLayout.PREFERRED_SIZE,
						javax.swing.GroupLayout.DEFAULT_SIZE,
						javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(clickAddColFamily)
					.addComponent(jLabel5))
			.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
			.addGroup(
				panelAlterTableControlLayout
					.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
					.addGroup(
						panelAlterTableControlLayout
							.createSequentialGroup()
							.addComponent(jLabel6)
							.addPreferredGap(
								javax.swing.LayoutStyle.ComponentPlacement.RELATED,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
							.addComponent(clickRemoveColFamily))
					.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE,
						javax.swing.GroupLayout.DEFAULT_SIZE,
						javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(37, 37, 37)
			.addComponent(clickAlterTable).addContainerGap(40, Short.MAX_VALUE)));
	
	javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
	getContentPane().setLayout(layout);
	layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
		layout.createSequentialGroup()
			.addContainerGap()
			.addGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
					.addComponent(panelAlterTableControl, javax.swing.GroupLayout.DEFAULT_SIZE,
						javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
					.addGroup(
						layout.createSequentialGroup()
							.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.PREFERRED_SIZE)
							.addGap(0, 15, Short.MAX_VALUE))).addContainerGap()));
	layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
		layout.createSequentialGroup()
			.addContainerGap()
			.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
			.addGap(18, 18, 18)
			.addComponent(panelAlterTableControl, javax.swing.GroupLayout.PREFERRED_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
			.addContainerGap(38, Short.MAX_VALUE)));
	
	pack();
    }// </editor-fold>
    
    private void clickAddColFamilyActionPerformed(java.awt.event.ActionEvent evt) {
	
	String splchars = "`~!@#$%^&*()_+=,./<>?;':\"\\ \n";
	char[] splCharArray = splchars.toCharArray();
	HColumnDescriptor colDesc;
	String colFamily[] = valueNewColFamilyName.getText().split(":");
	String colFamilyName = colFamily[0];
	if (StringUtils.isEmpty(colFamilyName) || StringUtils.containsAny(colFamilyName, splCharArray)) {
	    JOptionPane.showMessageDialog(this, "Provide a valid Coloumn Family Name");
	} else {
	    listModel.addElement(colFamilyName);
	    
	    colDesc = new HColumnDescriptor(colFamilyName);
	    try {
		if (colFamily.length > 1) colDesc.setMaxVersions(Integer.parseInt(colFamily[1]));
	    }
	    catch (Exception e) {
		colDesc.setMaxVersions(1);
	    }
	    tableDesc.addFamily(colDesc);
	    
	}
    }
    
    private void clickRemoveColFamilyActionPerformed(java.awt.event.ActionEvent evt) {
	
	String familyname = (String) listColFamilynames.getSelectedValue();
	String family = familyname.split(":")[0];
	System.out.println("Removing " + family);
	listModel.removeElement(familyname);
	tableDesc.removeFamily(Bytes.toBytes(family));
    }
    
    private void clickAlterActionPerformed(java.awt.event.ActionEvent evt) {
	
	labelTableName.setText((String) comboTableList.getSelectedItem());
	// listColFamilynames.removeAll();
	listModel.removeAllElements();
	byte[] tableName = Bytes.toBytes((String) comboTableList.getSelectedItem());
	
	AddColoumnList((String) comboTableList.getSelectedItem());
	
	try {
	    tableDesc = hbaseAdmin.getTableDescriptor(tableName);
	    
	}
	catch (IOException ex) {
	    Logger.getLogger(HBaseManagerAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
	}
	
	disablePane(true);
	
    }
    
    private void clickDropActionPerformed(java.awt.event.ActionEvent evt) {
	String tableName;
	try {
	    int opt = JOptionPane.showConfirmDialog(this,
		    "Are you sure you want to Drop '" + comboTableList.getSelectedItem() + "'", "Warning!",
		    JOptionPane.YES_NO_OPTION);
	    if (opt == 0) {
		tableName = (String) comboTableList.getSelectedItem();
		listModel.removeElement(tableName);
		hbaseAdmin.disableTable(tableName);
		hbaseAdmin.deleteTable(tableName);
		
	    }
	}
	catch (IOException ex) {
	    Logger.getLogger(HBaseManagerAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
	}
    }
    
    private void clickTruncateActionPerformed(java.awt.event.ActionEvent evt) {
	try {
	    
	    int opt = JOptionPane.showConfirmDialog(this,
		    "This Action will delete all Data of '" + comboTableList.getSelectedItem() + "'. Are you Sure?",
		    "Warning!", JOptionPane.YES_NO_OPTION);
	    if (opt == 0) {
		byte[] tableName = Bytes.toBytes((String) comboTableList.getSelectedItem());
		HTableDescriptor currentDescriptor = hbaseAdmin.getTableDescriptor(tableName);
		
		hbaseAdmin.disableTable(tableName);
		hbaseAdmin.deleteTable(tableName);
		hbaseAdmin.createTable(currentDescriptor);
		
		JOptionPane.showMessageDialog(this, "Table Truncated Successfully");
	    }
	    
	}
	catch (IOException ex) {
	    Logger.getLogger(HBaseManagerAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
	}
	
    }
    
    private void clickAlterTableActionPerformed(java.awt.event.ActionEvent evt) {
	
	byte[] table = Bytes.toBytes((String) comboTableList.getSelectedItem());
	try {
	    hbaseAdmin.disableTable(table);
	    hbaseAdmin.modifyTable(table, tableDesc);
	    hbaseAdmin.enableTable(table);
	    JOptionPane.showMessageDialog(this, "Table Modified Successfully");
	    listModel.removeAllElements();
	    disablePane(false);
	    
	}
	catch (IOException ex) {
	    Logger.getLogger(HBaseManagerAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
	}
	
    }
    
    private void comboTableListActionPerformed(java.awt.event.ActionEvent evt) {
	
	disablePane(false);
    }
    
    /**
     * @param args
     *            the command line arguments
     */
    public static void main(String args[]) {
	/*
	 * Set the Nimbus look and feel
	 */
	// <editor-fold defaultstate="collapsed"
	// desc=" Look and feel setting code (optional) ">
	/*
	 * If Nimbus (introduced in Java SE 6) is not available, stay with the
	 * default look and feel. For details see
	 * http://download.oracle.com/javase
	 * /tutorial/uiswing/lookandfeel/plaf.html
	 */
	try {
	    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
		if ("Nimbus".equals(info.getName())) {
		    javax.swing.UIManager.setLookAndFeel(info.getClassName());
		    break;
		}
	    }
	}
	catch (ClassNotFoundException ex) {
	    java.util.logging.Logger.getLogger(HBaseManagerAdminPanel.class.getName()).log(
		    java.util.logging.Level.SEVERE, null, ex);
	}
	catch (InstantiationException ex) {
	    java.util.logging.Logger.getLogger(HBaseManagerAdminPanel.class.getName()).log(
		    java.util.logging.Level.SEVERE, null, ex);
	}
	catch (IllegalAccessException ex) {
	    java.util.logging.Logger.getLogger(HBaseManagerAdminPanel.class.getName()).log(
		    java.util.logging.Level.SEVERE, null, ex);
	}
	catch (javax.swing.UnsupportedLookAndFeelException ex) {
	    java.util.logging.Logger.getLogger(HBaseManagerAdminPanel.class.getName()).log(
		    java.util.logging.Level.SEVERE, null, ex);
	}
	// </editor-fold>
	
	/*
	 * Create and display the dialog
	 */
	java.awt.EventQueue.invokeLater(new Runnable() {
	    
	    public void run() {
		HBaseManagerAdminPanel dialog = new HBaseManagerAdminPanel(new javax.swing.JFrame(), true);
		dialog.addWindowListener(new java.awt.event.WindowAdapter() {
		    
		    @Override
		    public void windowClosing(java.awt.event.WindowEvent e) {
			System.exit(0);
		    }
		});
		dialog.setVisible(true);
	    }
	});
    }
    
    // Variables declaration - do not modify
    private javax.swing.JButton clickAddColFamily;
    private javax.swing.JButton clickAlter;
    private javax.swing.JButton clickAlterTable;
    private javax.swing.JButton clickDrop;
    private javax.swing.JButton clickRemoveColFamily;
    private javax.swing.JButton clickTruncate;
    private javax.swing.JComboBox comboTableList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelTableName;
    private javax.swing.JList listColFamilynames;
    private javax.swing.JPanel panelAlterTableControl;
    private javax.swing.JTextField valueNewColFamilyName;
    
    // End of variables declaration
    
    private void disablePane(boolean b) {
	
	for (int i = 0; i < cmplist.length; i++) {
	    cmplist[i].setEnabled(b);
	}
	
    }
}
